From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nostalgic853 <yuu8583@proton.me>
Date: Mon, 24 Oct 2022 23:28:31 +0800
Subject: [PATCH] Revert purpur "Remove Profilers"

This reverts commit 0004242a19885c29a4cf68c510411ed70cf6e439.

diff --git a/src/main/java/co/aikar/timings/TimedEventExecutor.java b/src/main/java/co/aikar/timings/TimedEventExecutor.java
index 2c15b67149d014fdce2dd74a550013d83b6e44c8..34e43e56ccc663e05b9cae36643e8df5eee5cb17 100644
--- a/src/main/java/co/aikar/timings/TimedEventExecutor.java
+++ b/src/main/java/co/aikar/timings/TimedEventExecutor.java
@@ -76,9 +76,9 @@ public class TimedEventExecutor implements EventExecutor {
             executor.execute(listener, event);
             return;
         }
-        //try (Timing ignored = timings.startTiming()){ // Purpur
+        try (Timing ignored = timings.startTiming()){
             executor.execute(listener, event);
-        //} // Purpur
+        }
     }
 
     @Override
diff --git a/src/main/java/co/aikar/timings/Timing.java b/src/main/java/co/aikar/timings/Timing.java
index 505908e987a032a801ae03d7fb020dfb662bf81b..a21e5ead5024fd0058c5e3302d8201dd249d32bc 100644
--- a/src/main/java/co/aikar/timings/Timing.java
+++ b/src/main/java/co/aikar/timings/Timing.java
@@ -36,7 +36,6 @@ public interface Timing extends AutoCloseable {
      * @return Timing
      */
     @NotNull
-    @io.papermc.paper.annotation.DoNotUse // Purpur
     Timing startTiming();
 
     /**
@@ -44,7 +43,6 @@ public interface Timing extends AutoCloseable {
      *
      * Will automatically be called when this Timing is used with try-with-resources
      */
-    @io.papermc.paper.annotation.DoNotUse // Purpur
     void stopTiming();
 
     /**
@@ -55,7 +53,6 @@ public interface Timing extends AutoCloseable {
      * @return Timing
      */
     @NotNull
-    @io.papermc.paper.annotation.DoNotUse // Purpur
     Timing startTimingIfSync();
 
     /**
@@ -65,14 +62,12 @@ public interface Timing extends AutoCloseable {
      *
      * But only if we are on the primary thread.
      */
-    @io.papermc.paper.annotation.DoNotUse // Purpur
     void stopTimingIfSync();
 
     /**
      * @deprecated Doesn't do anything - Removed
      */
     @Deprecated
-    @io.papermc.paper.annotation.DoNotUse // Purpur
     void abort();
 
     /**
@@ -84,6 +79,5 @@ public interface Timing extends AutoCloseable {
     TimingHandler getTimingHandler();
 
     @Override
-    @io.papermc.paper.annotation.DoNotUse // Purpur
     void close();
 }
diff --git a/src/main/java/co/aikar/timings/Timings.java b/src/main/java/co/aikar/timings/Timings.java
index 759e9cbcedb50894821dcb6dcc602af4f0c3453e..dd72a34eaa4bedd9ea0b92eaa79091b00eb4dd09 100644
--- a/src/main/java/co/aikar/timings/Timings.java
+++ b/src/main/java/co/aikar/timings/Timings.java
@@ -114,7 +114,7 @@ public final class Timings {
     @NotNull
     public static Timing ofStart(@NotNull Plugin plugin, @NotNull String name, @Nullable Timing groupHandler) {
         Timing timing = of(plugin, name, groupHandler);
-        //timing.startTiming(); // Purpur
+        timing.startTiming();
         return timing;
     }
 
diff --git a/src/main/java/co/aikar/timings/TimingsCommand.java b/src/main/java/co/aikar/timings/TimingsCommand.java
index b461b5c50f97f11cb9ef68abc520271bb72440fa..3132dc98d26c54c5e46162e53aaed195d7335c8d 100644
--- a/src/main/java/co/aikar/timings/TimingsCommand.java
+++ b/src/main/java/co/aikar/timings/TimingsCommand.java
@@ -44,7 +44,7 @@ public class TimingsCommand extends BukkitCommand {
     public TimingsCommand(@NotNull String name) {
         super(name);
         this.description = "Manages Spigot Timings data to see performance of the server.";
-        this.usageMessage = "/timings";// <reset|report|on|off|verbon|verboff>"; // Purpur
+        this.usageMessage = "/timings <reset|report|on|off|verbon|verboff>";
         this.setPermission("bukkit.command.timings");
     }
 
@@ -53,13 +53,6 @@ public class TimingsCommand extends BukkitCommand {
         if (!testPermission(sender)) {
             return true;
         }
-        if (true) {
-            net.kyori.adventure.text.minimessage.MiniMessage mm = net.kyori.adventure.text.minimessage.MiniMessage.miniMessage();
-            sender.sendMessage(mm.deserialize("<gold>Purpur has removed timings to save your performance. Please use <click:suggest_command:'/spark'><grey>/spark</grey></click> instead"));
-            sender.sendMessage(mm.deserialize("<gold>For more information, view its documentation at"));
-            sender.sendMessage(mm.deserialize("<gold><click:open_url:'https://spark.lucko.me/docs/Command-Usage'>https://spark.lucko.me/docs/Command-Usage</click>"));
-            return true;
-        }
         if (args.length < 1) {
             sender.sendMessage(text("Usage: " + this.usageMessage, NamedTextColor.RED));
             return true;
@@ -118,7 +111,7 @@ public class TimingsCommand extends BukkitCommand {
         Preconditions.checkNotNull(args, "Arguments cannot be null");
         Preconditions.checkNotNull(alias, "Alias cannot be null");
 
-        if (false && args.length == 1) { // Purpur
+        if (args.length == 1) {
             return StringUtil.copyPartialMatches(args[0], TIMINGS_SUBCOMMANDS,
                 new ArrayList<String>(TIMINGS_SUBCOMMANDS.size()));
         }
diff --git a/src/main/java/org/bukkit/command/SimpleCommandMap.java b/src/main/java/org/bukkit/command/SimpleCommandMap.java
index aad6edb02f690b875db28e8db9bcd4e36b90d766..0bc24d0effe9b2e44c41a1c00060b0ebf7395c4a 100644
--- a/src/main/java/org/bukkit/command/SimpleCommandMap.java
+++ b/src/main/java/org/bukkit/command/SimpleCommandMap.java
@@ -163,10 +163,10 @@ public class SimpleCommandMap implements CommandMap {
         // Paper end
 
         try {
-            //try (co.aikar.timings.Timing ignored = target.timings.startTiming()) { // Paper - use try with resources // Purpur
+            try (co.aikar.timings.Timing ignored = target.timings.startTiming()) { // Paper - use try with resources
             // Note: we don't return the result of target.execute as thats success / failure, we return handled (true) or not handled (false)
             target.execute(sender, sentCommandLabel, parsedArgs); // Purpur
-            //} // target.timings.stopTiming(); // Spigot // Paper // Purpur
+            } // target.timings.stopTiming(); // Spigot // Paper
         } catch (CommandException ex) {
             server.getPluginManager().callEvent(new com.destroystokyo.paper.event.server.ServerExceptionEvent(new com.destroystokyo.paper.exception.ServerCommandException(ex, target, sender, args))); // Paper
             //target.timings.stopTiming(); // Spigot // Paper
diff --git a/src/main/java/org/spigotmc/CustomTimingsHandler.java b/src/main/java/org/spigotmc/CustomTimingsHandler.java
index ce209668dd7f11b284bd7f5688191a0b3ae86a09..123647bb10fc89508437d7a0bd3fd31d58ee7c82 100644
--- a/src/main/java/org/spigotmc/CustomTimingsHandler.java
+++ b/src/main/java/org/spigotmc/CustomTimingsHandler.java
@@ -61,7 +61,7 @@ public final class CustomTimingsHandler {
         handler = timing;
     }
 
-    public void startTiming() { /*handler.startTiming();*/ } // Purpur
-    public void stopTiming() { /*handler.stopTiming();*/ } // Purpur
+    public void startTiming() { handler.startTiming(); }
+    public void stopTiming() { handler.stopTiming(); }
 
 }
