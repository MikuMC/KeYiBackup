From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nostalgic853 <yuu8583@proton.me>
Date: Fri, 9 Dec 2022 23:09:09 +0800
Subject: [PATCH] Remove "Spark Profiler"

This reverts commit 00657e75cfec6d86bbdcb1126aabcf7177bec31a.

diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index e35453e1b105489db6715c3885cee88097ef4e97..973d40c8c25856f093f11a9c986e0325b4b48fff 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -448,38 +448,7 @@ public final class CraftServer implements Server {
             if (!pluginFolder.exists()) {
                 pluginFolder.mkdirs();
             }
-            // Purpur start
-            List<File> extraJars = this.extraPluginJars();
-            if (!Boolean.getBoolean("Purpur.IReallyDontWantSpark")) {
-                try {
-                    File file = new File("cache", "spark.jar");
-                    file.getParentFile().mkdirs();
-
-                    boolean shouldDownload = true;
-                    if (file.exists()) {
-                        String fileSha1 = String.format("%040x", new java.math.BigInteger(1, java.security.MessageDigest.getInstance("SHA-1").digest(java.nio.file.Files.readAllBytes(file.toPath()))));
-                        String sparkSha1;
-                        try (java.io.BufferedReader reader = new java.io.BufferedReader(new InputStreamReader(new java.net.URL("https://sparkapi.lucko.me/download/bukkit/sha1").openStream()))) {
-                            sparkSha1 = reader.lines().collect(Collectors.joining(""));
-                        }
-
-                        if (fileSha1.equals(sparkSha1)) {
-                            shouldDownload = false;
-                        }
-                    }
-
-                    if (shouldDownload) {
-                        java.nio.file.Files.copy(new java.net.URL("https://sparkapi.lucko.me/download/bukkit").openStream(), file.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);
-                    }
-
-                    extraJars.add(file);
-                } catch (Exception e) {
-                    getLogger().severe("Purpur: Failed to download and install spark plugin");
-                    e.printStackTrace();
-                }
-            }
-            Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, extraJars);
-            // Purpur end
+            Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, this.extraPluginJars());
             // Paper end
             for (Plugin plugin : plugins) {
                 try {
