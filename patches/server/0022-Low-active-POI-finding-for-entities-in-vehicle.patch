From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nostalgic853 <yuu8583@proton.me>
Date: Wed, 21 Dec 2022 17:05:01 +0800
Subject: [PATCH] Low active POI finding for entities in vehicle

Airplane
Copyright (C) 2020 Technove LLC

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

diff --git a/src/main/java/cc/keyimc/keyi/config/KGlobalConfig.java b/src/main/java/cc/keyimc/keyi/config/KGlobalConfig.java
index 3a82d6bcd92c497ce21e5fd3cf569d5794aedb2e..9f6a8841390b6982efb3ebb21ced137c780e5d1d 100644
--- a/src/main/java/cc/keyimc/keyi/config/KGlobalConfig.java
+++ b/src/main/java/cc/keyimc/keyi/config/KGlobalConfig.java
@@ -60,6 +60,7 @@ public class KGlobalConfig {
 
     // Performance settings
     public boolean spigotDropsMergingMechanism = true;
+    public boolean lowActivePoiFindingForEntitiesInVehicle = true;
 
     // Bug-fixes settings
     public boolean fixTripwireDuping = true;
@@ -75,6 +76,7 @@ public class KGlobalConfig {
 
         // Performance settings
         spigotDropsMergingMechanism = get("performance.use-spigot-drops-merging-mechanism", spigotDropsMergingMechanism);
+        lowActivePoiFindingForEntitiesInVehicle = get("performance.low-active-poi-finding-for-entities-in-vehicle", lowActivePoiFindingForEntitiesInVehicle);
 
         // Bug-fixes settings
         fixTripwireDuping = get("bug-fixes.fix-tripwire-duping", fixTripwireDuping);
@@ -93,6 +95,7 @@ public class KGlobalConfig {
 
         // Performance settings
         fileConfig.setComment("performance.use-spigot-drops-merging-mechanism", " Should large drops stack should be merged into smaller drops stack?");
+        fileConfig.setComment("performance.low-active-poi-finding-for-entities-in-vehicle", " Should the server wait more 10s to do POI finding of entities stuck in a vehicle?");
 
         // Bug-fixes settings
         fileConfig.setComment("bug-fixes.fix-tripwire-duping", " Should Paper's tripwire duping fix be enabled? By disabling this you are able to duping tripwires!");
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java b/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
index fe502445a77afe7e3807afae48d7bf03f370e290..1c555f6c10740506242b12775304c6a310cc1f25 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
@@ -7,7 +7,6 @@ import java.util.HashSet;
 import java.util.Optional;
 import java.util.Set;
 import java.util.function.Predicate;
-import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.GlobalPos;
@@ -22,6 +21,7 @@ import net.minecraft.world.entity.ai.village.poi.PoiManager;
 import net.minecraft.world.entity.ai.village.poi.PoiType;
 import net.minecraft.world.level.pathfinder.Path;
 import org.apache.commons.lang3.mutable.MutableLong;
+import cc.keyimc.keyi.config.KGlobalConfig; // KeYi
 
 public class AcquirePoi {
     public static final int SCAN_RANGE = 48;
@@ -47,6 +47,11 @@ public class AcquirePoi {
                         return false;
                     } else {
                         mutableLong.setValue(time + 20L + (long)world.getRandom().nextInt(20));
+                        // KeYi start - Airplane: wait an additional 10s to check again if they're stuck
+                        if (entity.getNavigation().isStuck() && KGlobalConfig.getInstance().lowActivePoiFindingForEntitiesInVehicle) {
+                            mutableLong.add(200);
+                        }
+                        // KeYi end
                         if (entity.getNavigation().isStuck()) mutableLong.add(200); // Pufferfish - wait an additional 10s to check again if they're stuck
                         PoiManager poiManager = world.getPoiManager();
                         long2ObjectMap.long2ObjectEntrySet().removeIf((entry) -> {
